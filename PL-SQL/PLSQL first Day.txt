vaiableName datatype;
vaiableName datatype:=value;

vaiableName constant datatype:=value;
vaiableName datatype not null:=value;

----------------------------------------------
begin
dbms_output.put_line('hello');
end;
------------------------------
declare
---
---
begin
----
----
exception
---
---
end;


two types of block
named package,procedure,func
unnamed--(anym)

sql data

number
char
varchar
date
single row--> lower, substr
multiple row func-->sum ,max

variablename datatype;

:=
int i,j,k;-->c  prog

num, i,j number(2);-->plslq wrong
num number;
i number;

set serverout on
declare
num number(2):=10;
name varchar2(20):=lower('abc');
begin
dbms_output.put_line(name);
end;

--------------------------------------------------
into

declare
name varchar2(30);
begin
select last_name into name from employees where employee_id=100;
dbms_output.put_line('emp name='||name);
end;
--------------------------------
declare
name varchar2(100);
sal number;
empid employees.employee_id%type;
begin
select first_name || ' '||last_name ,salary,employee_id into name,sal ,empid from employees where employee_id=100;
dbms_output.put_line('emp name='||name);
dbms_output.put_line('emp salary='||sal);
end;

----------------------------------------------------
to declare variable with %type

variable tablename.columnName%type;
--------------------------------------------------------
to declare variable with %rowtype


variable tablename%rowtype;

recEmp employees%rowtype;


-----------------------------
declare
recEmp employees%rowtype;

begin
select * into recEmp from employees where employee_id=100;
dbms_output.put_line('emp lastname='||recEmp.last_name);
dbms_output.put_line('emp firstname='||recEmp.first_name);
dbms_output.put_line('emp sal='||recEmp.salary);
dbms_output.put_line('emp deptno='||recEmp.department_id);
end;


=--------------------------
type typename is record
( variablename datatype,
 variablename datatype,
---
 variablename datatype
);

-----------------------------
declare
type emprectype is record
( name varchar2(20),
  sal number,
empid employees.employee_id%type
);

recEmp  emprectype;

begin
select last_name,salary,employee_id into recEmp from employees where employee_id=100;
dbms_output.put_line('emp lastname='||recEmp.name);
dbms_output.put_line('emp empid='||recEmp.empid);
dbms_output.put_line('emp sal='||recEmp.sal);

end;
-------------------------------------------------------
declare
num number(2) not null:=10;
i constant number :=10;
begin
num:=num+1;
--i:=i+1;
dbms_output.put_line('value of num='||num);
dbms_output.put_line('value of i='||i);
end;
---------------------------------------------------------
flag boolean:=true;
--------------------------------------------------------
if (condition) then
---
---
end if;

---------------------------------
if (condition) then
---
---
else
---
----
end if;

---------------------------------------------
if (condition) then
---
---
elsif (condition) then
-----
-----
else
----
----

end if;



-------------------------------------------------
declare
num number:=11;
begin
if ( mod(num,2)=0) then
dbms_output.put_line(num ||' is even number');
else
dbms_output.put_line(num ||' is odd number');
end if;

end;

----------------------------------------
declare
num1 number:=12;
num2 number :=22;
num3 number:=42; 
begin
if ( num1> num2 and num1>num3) then
dbms_output.put_line(num1 ||' is max number');
elsif ( num2> num3) then
dbms_output.put_line(num2 ||' is max number');
else
dbms_output.put_line(num3 ||' is max number');
end if;
end;
-----------------------------------------------------------
loop

while loop
basic loop
for loop
------------------------------------------------------


while (condition)
loop
-----
----
----
end loop;
----------------------------------------------
declare
num1 number:=1;
begin
while (num1 <5)
loop
dbms_output.put_line(num1);
num1:=num1+1;
end loop;
end
----------------------------
basic loop

loop

exit when(condition);
end loop;
-------------------------------
declare
num1 number:=1;
begin
loop
dbms_output.put_line(num1);
num1:=num1+1;
exit when(num1 >5);
end loop;
end;
--------------------------------
for loop

for variable lowerlimit .. upperlimit
loop
---
----
end loop;
---------------------------------------------


begin
for num1 in 1..5
loop
dbms_output.put_line(num1);
--num1:=num1+2;
end loop;
end;
----------------------------------------
begin
for num1 in reverse 1..5
loop
dbms_output.put_line(num1);
--num1:=num1+2;
end loop;
end;
--------------------------------------------
<<outer>>
declare
str varchar(100):='hello';
str1 varchar(100):='world';
begin

   declare
    str varchar(100):='hi';
   begin
    str:=str||str1;
    dbms_output.put_line(str);
    outer.str:=outer.str||str1;
   dbms_output.put_line(outer.str);
   end;
end;
-----------------------------------------------------------
two types of cusors
explicit cursor---->(select stat retruns more than one row)
implicit cursor---->(select stat returns single row, dml statements in plsql block)

ddl-->cannot have ddl statements directly in plsql-->Dymanic sql


-------------------------------------------------------------implicit cursor


sql%found
sql%notfound
sql%isopen
          -->boolean 
sql%rowcount-->integer


begin
update employees set salary=salary+1000 where department_id=90;
if(sql%found) then
dbms_output.put_line(sql%rowcount ||' rows update');
else
dbms_output.put_line('no rows updated');
end if;
end;
-------------------------------------------------------

explicit cursor

cursor cursorName is subquery;-->declaration

open cursorname;-->excutable
fetch values form cursor

fetch cursorname into variablename;


cursorName%found
cursorName%notfound
cursorName%isopen
cursorName%rowcount

               isopen   rowcount    notfound     found 
before cursor   f         -           -           -
opened 
after openinig  t         null           null      null      
cursor 

first time fetch t       1            f            t
 execute   
2                 t      2            f            t
3                 t      3            f             t
 4                t                   t            f
 


--------------------------------------------
basic loop
---------------
declare
cursor cEmp is select * from employees where department_id=90;
recEmp employees%rowtype;
begin
open cEmp;
loop
dbms_output.put_line(recEmp.employee_id); 
fetch cEmp into recEmp;
exit when(cEmp%notfound);
end loop;
close cEmp;

end;
---------------------------------------------------------
while loop
---------------------
declare
cursor cEmp is select * from employees where department_id=90;
recEmp employees%rowtype;
begin
open cEmp;
while(cEmp%found or cEmp%found is null)
loop
fetch cEmp into recEmp;
dbms_output.put_line(recEmp.employee_id); 

end loop;
close cEmp;
end;
-------------------------------------------------------------
for loop
------------
declare
cursor cEmp is select * from employees where department_id=90;
--recEmp employees%rowtype;
begin

for recEmp in cEmp
loop

dbms_output.put_line(recEmp.employee_id); 

end loop;

end;
-------------------------------------------------------
cursor cursorname(variablename datatype, variablename dataype) is subquery;
--------------------------------------------------------

declare
cursor cEmp(deptno number) is select * from employees where 

department_id=deptno;
recEmp employees%rowtype;
begin
open cEmp(50);
while(cEmp%found or cEmp%found is null)
loop
fetch cEmp into recEmp;
dbms_output.put_line(recEmp.employee_id); 

end loop;
close cEmp;
dbms_output.put_line('--------------------');
open cEmp(30);
while(cEmp%found or cEmp%found is null)
loop
fetch cEmp into recEmp;
dbms_output.put_line(recEmp.employee_id); 

end loop;
close cEmp;



end;
















































-----------------------------------------------------

user defined--> employees
system table--->dd user_objects

select * from dict;























